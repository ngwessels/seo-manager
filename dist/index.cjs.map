{"version":3,"file":"index.cjs","sources":["../src/utilities/setupInit.ts","../src/firebase.ts","../src/utilities/serverCall.ts","../src/utilities/fetch.ts","../src/backend/index.ts"],"sourcesContent":["export const returnKey = (): {\n  secretKey?: string;\n  projectKey?: string;\n  projectId?: string;\n} => {\n  let object: any = {};\n  // let objectValid = false;\n  if (process.env.SEO_MANAGER_MODULE_SECRETKEY) {\n    object.secretKey = process.env.SEO_MANAGER_MODULE_SECRETKEY;\n    // objectValid = true;\n  }\n  if (process.env.SEO_MANAGER_MODULE_PROJECTKEY) {\n    object.projectKey = process.env.SEO_MANAGER_MODULE_PROJECTKEY;\n    // objectValid = true;\n  }\n  if (process.env.SEO_MANAGER_MODULE_PROJECTID) {\n    object.projectId = process.env.SEO_MANAGER_MODULE_PROJECTID;\n    // objectValid = true;\n  }\n\n  return object;\n};\n\nexport const setProject = (project: any) => {\n  process.env.SEO_MANAGER_MODULE_PROJECT = JSON.stringify(project);\n};\n\nexport const returnProject = (): any | null => {\n  const data = process.env.SEO_MANAGER_MODULE_PROJECT;\n  return data ? JSON.parse(data) : null;\n};\n\nexport const setProjectPlan = (projectPlan: any) => {\n  process.env.SEO_MANAGER_MODULE_PROJECTPLAN = JSON.stringify(projectPlan);\n};\n\nexport const returnProjectPlan = (): any | null => {\n  const data = process.env.SEO_MANAGER_MODULE_PROJECTPLAN;\n  return data ? JSON.parse(data) : null;\n};\n","import { initializeApp, getApps, getApp } from \"firebase/app\";\n\nconst firebaseConfig =\n  process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Test\" &&\n  process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Development\"\n    ? {\n        apiKey: \"AIzaSyDPjpRmobrdUtIY3hIaNoyox7alxYJH_B8\",\n        authDomain: \"seo-manager-live.firebaseapp.com\",\n        projectId: \"seo-manager-live\",\n        storageBucket: \"seo-manager-live.appspot.com\",\n        messagingSenderId: \"510256510596\",\n        appId: \"1:510256510596:web:eae1ccc42cb103b8a7f4d1\",\n        measurementId: \"G-RED1HCM49W\"\n      }\n    : {\n        apiKey: \"AIzaSyBD6KEJFm2SVguRDEiqufIlRo5HuHu0IZg\",\n        authDomain: \"seo-manager-test.firebaseapp.com\",\n        projectId: \"seo-manager-test\",\n        storageBucket: \"seo-manager-test.appspot.com\",\n        messagingSenderId: \"682714204028\",\n        appId: \"1:682714204028:web:a782b9da96ce811ee606f9\",\n        measurementId: \"G-PYZDK47B2M\"\n      };\n\nlet app: any;\nconst appFoundIndex = getApps()?.findIndex((a) => {\n  if (a?.name === \"seo-manager\") {\n    return true;\n  }\n  return false;\n});\nif (appFoundIndex < 0) {\n  app = initializeApp(firebaseConfig, \"seo-manager\");\n} else {\n  app = getApp(\"seo-manager\");\n}\nexport default app;\n","import axios, { Method } from \"axios\";\nimport { returnKey } from \"./setupInit\";\n\nconst version = \"v1\";\n\nexport const serverCall = (\n  path: string,\n  method: string = \"put\",\n  data: any,\n  url?: string,\n  headers?: any\n): any => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const initData = returnKey(); //Returns Project Id and Project Key\n      if (!initData?.projectId) {\n        return reject({ results: false, error: \"Project Id is required\" });\n      }\n      const formattedPath = formatPath(path);\n      const urlPath = url\n        ? url\n        : process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Test\" &&\n          process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Development\"\n        ? `https://www.seomanager.dev/api/${version}/${formattedPath}`\n        : process.env.NEXT_PUBLIC_NODE_ENV_MANAGER === \"Test\"\n        ? `http://localhost:3001/api/${version}/${formattedPath}`\n        : `https://testing.seomanager.dev/api/${version}/${formattedPath}`;\n\n      let callHeaders = {\n        X_ProjectId: initData?.projectId,\n        X_ProjectKey: initData?.projectKey || \"\"\n      };\n      if (headers) {\n        callHeaders = { ...callHeaders, ...headers };\n      }\n      const response = await axios(urlPath, {\n        method: method as Method,\n        data: data || {},\n        headers: callHeaders\n      });\n      if (!response?.data?.results) {\n        return resolve(response?.data);\n      }\n      return resolve({ results: response?.data?.results });\n    } catch (err: any) {\n      return resolve({ results: false, data: err?.response?.data });\n    }\n  });\n};\n\nexport const serverSecretCall = (\n  path: string,\n  method: \"put\" | \"post\" = \"put\",\n  data: any,\n  url?: string,\n  headers?: any\n): any => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const initData = returnKey(); //Returns Project Id and Project Key\n\n      if (!initData?.projectId) {\n        return reject({ results: false, error: \"Project Id is required\" });\n      }\n      if (!initData?.secretKey) {\n        return reject({\n          results: false,\n          error: \"Project Secret Key is required\"\n        });\n      }\n\n      const formattedPath = formatPath(path);\n\n      const urlPath = url\n        ? url\n        : process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Test\" &&\n          process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Development\"\n        ? `https://www.seomanager.dev/api/${version}/${formattedPath}`\n        : process.env.NEXT_PUBLIC_NODE_ENV_MANAGER === \"Test\"\n        ? `http://localhost:3001/api/${version}/${formattedPath}`\n        : `https://testing.seomanager.dev/api/${version}/${formattedPath}`;\n      let callHeaders = {\n        X_ProjectId: initData?.projectId,\n        X_ProjectKey: initData?.projectKey || \"\",\n        X_ProjectSecretKey: initData?.secretKey || \"\"\n      };\n      if (headers) {\n        callHeaders = { ...callHeaders, ...headers };\n      }\n      const response = await axios(urlPath, {\n        method: method as Method,\n        url: urlPath,\n        data: data || {},\n        headers: callHeaders\n      });\n      return resolve(response?.data);\n    } catch (err: any) {\n      return resolve({\n        results: err?.response?.data?.results || false,\n        error: err?.response?.data?.error || true,\n        message:\n          err?.response?.data?.message ||\n          err?.response?.data ||\n          \"There was an error on our end! Please try again in a few minutes!\"\n      });\n    }\n  });\n};\n\nconst formatPath = (path: string) => {\n  let newPath = path;\n  if (newPath[0] === \"/\") {\n    newPath = newPath.replace(\"/\", \"\");\n  }\n  return newPath;\n};\n","import firebase from \"../firebase\";\nimport { getAuth, getIdToken } from \"firebase/auth\";\nconst auth: any = getAuth(firebase);\n\nimport { serverCall } from \"./serverCall\";\n\nexport const fetch = (\n  path: string,\n  headers: any = {}\n): Promise<{ results: boolean; error: string; message: string }> => {\n  return new Promise(async (resolve) => {\n    try {\n      //   if (process.browser) {\n      // throw {\n      //   error:\n      //     \"This function is only allowed to be called in a server environment, not in the client. If you are using NextJS this belong in getServerSideProps or getStaticProps.\"\n      // };\n      //   }\n      if (typeof window !== \"undefined\") {\n        throw {\n          error:\n            \"This function is only allowed to be called in a server environment, not in the client. If you are using NextJS this belong in getServerSideProps or getStaticProps.\"\n        };\n      }\n\n      if (!path) {\n        throw { error: \"You must pass page path!\" };\n      }\n      const { results, error } = await serverCall(\"/seo/server_get\", \"put\", {\n        path,\n        headers: headers || {}\n      });\n      if (!results) {\n        return resolve({\n          results: false,\n          error: error,\n          message: \"No SEO data for this page found\"\n        });\n      }\n      return resolve({ results, error: \"\", message: \"Successful\" });\n    } catch (err: any) {\n      return resolve({\n        results: false,\n        error: err.error,\n        message: \"Not Successful\"\n      });\n    }\n  });\n};\n\nexport const getUserToken = (): Promise<string> => {\n  return new Promise(async (resolve) => {\n    const token = getIdToken(auth.currentUser, true);\n    return resolve(token);\n  });\n};\n","import { fetch } from \"../utilities/fetch\";\nimport { serverSecretCall } from \"../utilities/serverCall\";\nimport {\n  PageIdentifiers,\n  PageSEO,\n  FetchSEOHeaders,\n  PageOptions\n} from \"../types\";\n\n//SEO DATA FETCH\n/**\n * * @name fetchSEO\n * @function\n * @param {string} path - Path to SEO page\n * @param {FetchSEOHeaders} [meta] - {request: context?.req}\n */\nexport const fetchSEO = (path: string, meta: FetchSEOHeaders = {}) => {\n  return new Promise(async (resolve) => {\n    const data = await fetch(path, meta?.request?.headers || {});\n    return resolve(data);\n  });\n};\n\n//VALIDATION\nexport const backendValidation = (queueId: string) => {\n  return new Promise(async (resolve) => {\n    try {\n      checkBackendKeys(); //Checks keys\n      const response = await serverSecretCall(\"/backend/validate\", \"put\", {\n        queueId\n      });\n      return resolve(response);\n    } catch (err: any) {\n      return resolve({\n        results: false,\n        message: err?.data?.error || err?.error || \"Something went wrong\",\n        error: true\n      });\n    }\n  });\n};\n\nexport const checkBackendKeys = () => {\n  const initData: any = returnKey(); //Returns Project Id and Project Key\n  if (!initData?.secretKey) {\n    throw {\n      error:\n        \"Please add a secretKey by calling the SEOInit function SEOInit({secretKey: <<Add Value Here>>. Make sure you initialize this in your Api, not _app.js!\"\n    };\n  }\n  if (!initData?.projectId) {\n    throw {\n      error:\n        \"Please add a projectId by calling the SEOInit function SEOInit({projectId: <<Add Value Here>>. Make sure you initialize this in your Api, not _app.js!\"\n    };\n  }\n};\n\n//BACKEND API\n\n//Insert a new page\n/**\n@name insertSeoPage\n@function\n@param {PageIdentifiers[]} pageIdentifiers - Array of {path [Required], pageId [Optional]}\n@param {PageSEO[]} pageSEO - Array of {title, description}\n*/\nexport function insertSeoPage(\n  pageIdentifiers: PageIdentifiers[],\n  pageSEO: PageSEO[]\n) {\n  return new Promise(async (resolve) => {\n    try {\n      if (pageIdentifiers?.length > 50) {\n        return resolve({\n          results: false,\n          message: \"You are limited to 50 inserts at the same time!\",\n          error: true\n        });\n      }\n      checkBackendKeys(); //Checks keys\n      const response = await serverSecretCall(\"backend/seo/insert\", \"post\", {\n        pageIdentifiers,\n        pageSEO\n      });\n      return resolve(response);\n    } catch (err: any) {\n      console.error(err);\n      return resolve({\n        results: false,\n        message: err?.data?.error || err?.error || \"Something went wrong\",\n        error: true\n      });\n    }\n  });\n}\n\n//Update Existing pages or insert new page\n/**\n@name updateSeoPage - Update a batch of SEO Pages\n@function \n@param {PageIdentifiers[]} pageIdentifiers - Array of {path [Required], pageId [Optional]}\n@param {PageSEO[]} pageSEO - Array of {title, description}\n@param {PageOptions} options - additional options for the batch update\n*/\nexport const updateSeoPage = (\n  pageIdentifiers: PageIdentifiers[],\n  pageSEO: PageSEO[],\n  options: PageOptions\n) => {\n  return new Promise(async (resolve) => {\n    try {\n      if (pageIdentifiers?.length > 50) {\n        return resolve({\n          results: false,\n          message: \"You are limited to 50 updates at the same time!\",\n          error: true\n        });\n      }\n      checkBackendKeys(); //Checks keys\n      const response = await serverSecretCall(\"backend/seo/update\", \"put\", {\n        pageIdentifiers,\n        pageSEO,\n        options\n      });\n      return resolve(response);\n    } catch (err: any) {\n      console.log(\"Error:\", err);\n      return resolve({\n        results: false,\n        message: err?.data?.error || err?.error || \"Something went wrong\",\n        error: true\n      });\n    }\n  });\n};\n\n//Delete existing pages\n/**\n@name deleteSeoPage\n@function\n@param {PageIdentifiers[]} pageIdentifiers - Array of {path [Required], pageId [Optional]}\n*/\nexport const deleteSeoPage = (pageIdentifiers: PageIdentifiers[]) => {\n  return new Promise(async (resolve) => {\n    try {\n      if (pageIdentifiers?.length > 50) {\n        return resolve({\n          results: false,\n          message: \"You are limited to 50 deletes at the same time!\",\n          error: true\n        });\n      }\n      checkBackendKeys(); //Checks keys\n      const response = await serverSecretCall(\"backend/seo/delete\", \"post\", {\n        pageIdentifiers\n      });\n      return resolve(response);\n    } catch (err: any) {\n      return resolve({\n        results: false,\n        message: err?.data?.error || err?.error || \"Something went wrong\",\n        error: true\n      });\n    }\n  });\n};\n\n//Get pages that fit identifiers\n/**\n@name getSeoPages\n@function\n@param {PageIdentifiers} pageIdentifiers - Object of {path [Required], pageId [Optional]}\n*/\nexport const getSeoPages = (pageIdentifiers: PageIdentifiers): Promise<any> => {\n  return new Promise(async (resolve) => {\n    try {\n      checkBackendKeys(); //Checks keys\n      const response = await serverSecretCall(\n        \"backend/seo/getSeoPages\",\n        \"post\",\n        {\n          pageIdentifiers\n        }\n      );\n      return resolve(response);\n    } catch (err: any) {\n      return resolve({\n        results: false,\n        error: true,\n        message: err?.data?.error || err?.error || \"Something went wrong\"\n      });\n    }\n  });\n};\n\n//RETURN KEYS\nconst returnKey = (): {\n  secretKey?: string;\n  projectKey?: string;\n  projectId?: string;\n} => {\n  let object: { secretKey?: string; projectKey?: string; projectId?: string } =\n    {};\n  if (process.env.SEO_MANAGER_MODULE_SECRETKEY) {\n    object.secretKey = process.env.SEO_MANAGER_MODULE_SECRETKEY;\n  }\n  if (process.env.SEO_MANAGER_MODULE_PROJECTKEY) {\n    object.projectKey = process.env.SEO_MANAGER_MODULE_PROJECTKEY;\n  }\n  if (process.env.SEO_MANAGER_MODULE_PROJECTID) {\n    object.projectId = process.env.SEO_MANAGER_MODULE_PROJECTID;\n  }\n\n  return object;\n};\n"],"names":["returnKey","object","process","env","SEO_MANAGER_MODULE_SECRETKEY","secretKey","SEO_MANAGER_MODULE_PROJECTKEY","projectKey","SEO_MANAGER_MODULE_PROJECTID","projectId","firebaseConfig","NEXT_PUBLIC_NODE_ENV_MANAGER","apiKey","authDomain","storageBucket","messagingSenderId","appId","measurementId","app","_a","getApps","findIndex","a","name","initializeApp","getApp","firebase","version","serverSecretCall","path","method","data","url","headers","Promise","resolve","reject","__awaiter","initData","results","error","formattedPath","formatPath","urlPath","callHeaders","X_ProjectId","X_ProjectKey","X_ProjectSecretKey","Object","assign","response","axios","err","_b","_d","_c","message","_f","_e","_g","newPath","replace","getAuth","fetch","window","serverCall","checkBackendKeys","queueId","pageIdentifiers","length","meta","request","pageSEO","this","console","SEO_MANAGER_MODULE_PROJECT","JSON","parse","SEO_MANAGER_MODULE_PROJECTPLAN","project","stringify","projectPlan","options","log"],"mappings":"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"}