{"version":3,"file":"index.es.js","sources":["../../src/utilities/setupInit.ts","../../src/utilities/serverCall.ts","../../src/frontend/components/SitemapHelper/SitemapHelper.mjs","../../src/frontend/components/RobotsHelper/RobotsHelper.mjs"],"sourcesContent":["export const returnKey = (): {\n  secretKey?: string;\n  projectKey?: string;\n  projectId?: string;\n} => {\n  let object: any = {};\n  // let objectValid = false;\n  if (process.env.SEO_MANAGER_MODULE_SECRETKEY) {\n    object.secretKey = process.env.SEO_MANAGER_MODULE_SECRETKEY;\n    // objectValid = true;\n  }\n  if (process.env.SEO_MANAGER_MODULE_PROJECTKEY) {\n    object.projectKey = process.env.SEO_MANAGER_MODULE_PROJECTKEY;\n    // objectValid = true;\n  }\n  if (process.env.SEO_MANAGER_MODULE_PROJECTID) {\n    object.projectId = process.env.SEO_MANAGER_MODULE_PROJECTID;\n    // objectValid = true;\n  }\n\n  return object;\n};\n\nexport const setProject = (project: any) => {\n  process.env.SEO_MANAGER_MODULE_PROJECT = JSON.stringify(project);\n};\n\nexport const returnProject = (): any | null => {\n  const data = process.env.SEO_MANAGER_MODULE_PROJECT;\n  return data ? JSON.parse(data) : null;\n};\n\nexport const setProjectPlan = (projectPlan: any) => {\n  process.env.SEO_MANAGER_MODULE_PROJECTPLAN = JSON.stringify(projectPlan);\n};\n\nexport const returnProjectPlan = (): any | null => {\n  const data = process.env.SEO_MANAGER_MODULE_PROJECTPLAN;\n  return data ? JSON.parse(data) : null;\n};\n","import axios, { Method } from \"axios\";\nimport { returnKey } from \"./setupInit\";\n\nconst version = \"v1\";\n\nexport const serverCall = (\n  path: string,\n  method: string = \"put\",\n  data: any,\n  url?: string,\n  headers?: any\n): any => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const initData = returnKey(); //Returns Project Id and Project Key\n      if (!initData?.projectId) {\n        return reject({ results: false, error: \"Project Id is required\" });\n      }\n      const formattedPath = formatPath(path);\n      const urlPath = url\n        ? url\n        : process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Test\" &&\n          process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Development\"\n        ? `https://www.seomanager.dev/api/${version}/${formattedPath}`\n        : process.env.NEXT_PUBLIC_NODE_ENV_MANAGER === \"Test\"\n        ? `http://localhost:3001/api/${version}/${formattedPath}`\n        : `https://testing.seomanager.dev/api/${version}/${formattedPath}`;\n\n      let callHeaders = {\n        X_ProjectId: initData?.projectId,\n        X_ProjectKey: initData?.projectKey || \"\"\n      };\n      if (headers) {\n        callHeaders = { ...callHeaders, ...headers };\n      }\n      const response = await axios(urlPath, {\n        method: method as Method,\n        data: data || {},\n        headers: callHeaders\n      });\n      if (!response?.data?.results) {\n        return resolve(response?.data);\n      }\n      return resolve({ results: response?.data?.results });\n    } catch (err: any) {\n      return resolve({ results: false, data: err?.response?.data });\n    }\n  });\n};\n\nexport const serverSecretCall = (\n  path: string,\n  method: \"put\" | \"post\" = \"put\",\n  data: any,\n  url?: string,\n  headers?: any\n): any => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const initData = returnKey(); //Returns Project Id and Project Key\n\n      if (!initData?.projectId) {\n        return reject({ results: false, error: \"Project Id is required\" });\n      }\n      if (!initData?.secretKey) {\n        return reject({\n          results: false,\n          error: \"Project Secret Key is required\"\n        });\n      }\n\n      const formattedPath = formatPath(path);\n\n      const urlPath = url\n        ? url\n        : process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Test\" &&\n          process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Development\"\n        ? `https://www.seomanager.dev/api/${version}/${formattedPath}`\n        : process.env.NEXT_PUBLIC_NODE_ENV_MANAGER === \"Test\"\n        ? `http://localhost:3001/api/${version}/${formattedPath}`\n        : `https://testing.seomanager.dev/api/${version}/${formattedPath}`;\n      let callHeaders = {\n        X_ProjectId: initData?.projectId,\n        X_ProjectKey: initData?.projectKey || \"\",\n        X_ProjectSecretKey: initData?.secretKey || \"\"\n      };\n      if (headers) {\n        callHeaders = { ...callHeaders, ...headers };\n      }\n      const response = await axios(urlPath, {\n        method: method as Method,\n        url: urlPath,\n        data: data || {},\n        headers: callHeaders\n      });\n      return resolve(response?.data);\n    } catch (err: any) {\n      return resolve({\n        results: err?.response?.data?.results || false,\n        error: err?.response?.data?.error || true,\n        message:\n          err?.response?.data?.message ||\n          err?.response?.data ||\n          \"There was an error on our end! Please try again in a few minutes!\"\n      });\n    }\n  });\n};\n\nconst formatPath = (path: string) => {\n  let newPath = path;\n  if (newPath[0] === \"/\") {\n    newPath = newPath.replace(\"/\", \"\");\n  }\n  return newPath;\n};\n","import React from \"react\";\n\n// import { serverCall } from \"../../../utilities/serverCall\";\nimport { serverCall } from \"src/utilities/serverCall\";\n\nexport class SitemapHelper extends React.Component {\n  static async getInitialProps({ res, req }) {\n    res.setHeader(\"Content-Type\", \"text/xml\");\n    try {\n      const { results } = await serverCall(\"/sitemap/\", \"put\", {\n        path: req.url,\n        headers: req?.headers || {}\n      });\n      res.write(results);\n    } catch (err) {\n      console.error(err.error);\n    }\n    res.end();\n  }\n}\n","import { Component } from \"react\";\n\nimport { serverCall } from \"src/utilities/serverCall\";\n\nexport class RobotsHelper extends Component {\n  static async getInitialProps({ res, req }) {\n    res.setHeader(\"Content-Type\", \"text/plain\");\n    try {\n      const { results } = await serverCall(\"/robots/\", \"put\", {\n        headers: req?.headers || {}\n      });\n      res.write(results);\n    } catch (err) {\n      console.error(err.error);\n    }\n    res.end();\n  }\n}\n"],"names":["version","serverCall","path","method","data","url","headers","Promise","resolve","reject","__awaiter","initData","object","process","env","SEO_MANAGER_MODULE_SECRETKEY","secretKey","SEO_MANAGER_MODULE_PROJECTKEY","projectKey","SEO_MANAGER_MODULE_PROJECTID","projectId","returnKey","results","error","formattedPath","formatPath","urlPath","NEXT_PUBLIC_NODE_ENV_MANAGER","callHeaders","X_ProjectId","X_ProjectKey","Object","assign","response","axios","_a","err","_c","newPath","replace","SitemapHelper","React","Component","static","res","req","setHeader","write","console","end","RobotsHelper"],"mappings":"+VAAO,MCGDA,EAAU,KAEHC,EAAa,CACxBC,EACAC,EAAiB,MACjBC,EACAC,EACAC,IAEO,IAAIC,SAAQ,CAAOC,EAASC,IAAUC,OAAA,OAAA,OAAA,GAAA,sBAC3C,IACE,MAAMC,EDda,MAKvB,IAAIC,EAAc,CAAA,EAelB,OAbIC,QAAQC,IAAIC,+BACdH,EAAOI,UAAYH,QAAQC,IAAIC,8BAG7BF,QAAQC,IAAIG,gCACdL,EAAOM,WAAaL,QAAQC,IAAIG,+BAG9BJ,QAAQC,IAAIK,+BACdP,EAAOQ,UAAYP,QAAQC,IAAIK,8BAI1BP,CAAM,ECNQS,GACjB,KAAKV,eAAAA,EAAUS,WACb,OAAOX,EAAO,CAAEa,SAAS,EAAOC,MAAO,2BAEzC,MAAMC,EAAgBC,EAAWvB,GAC3BwB,EAAUrB,IAEiC,SAA7CQ,QAAQC,IAAIa,8BACiC,gBAA7Cd,QAAQC,IAAIa,6BACZ,kCAAkC3B,KAAWwB,IACA,SAA7CX,QAAQC,IAAIa,6BACZ,6BAA6B3B,KAAWwB,IACxC,sCAAsCxB,KAAWwB,KAErD,IAAII,EAAc,CAChBC,YAAalB,aAAA,EAAAA,EAAUS,UACvBU,cAAcnB,eAAAA,EAAUO,aAAc,IAEpCZ,IACFsB,EAAmBG,OAAAC,OAAAD,OAAAC,OAAA,GAAAJ,GAAgBtB,IAErC,MAAM2B,QAAiBC,EAAMR,EAAS,CACpCvB,OAAQA,EACRC,KAAMA,GAAQ,CAAE,EAChBE,QAASsB,IAEX,OAAqB,QAAhBO,EAAAF,aAAA,EAAAA,EAAU7B,YAAM,IAAA+B,OAAA,EAAAA,EAAAb,SAGdd,EAAQ,CAAEc,kBAASW,aAAQ,EAARA,EAAU7B,2BAAMkB,UAFjCd,EAAQyB,eAAAA,EAAU7B,KAK5B,CAFC,MAAOgC,GACP,OAAO5B,EAAQ,CAAEc,SAAS,EAAOlB,KAAqB,QAAfiC,EAAAD,eAAAA,EAAKH,gBAAU,IAAAI,OAAA,EAAAA,EAAAjC,MACvD,CACF,MA8DGqB,EAAcvB,IAClB,IAAIoC,EAAUpC,EAId,MAHmB,MAAfoC,EAAQ,KACVA,EAAUA,EAAQC,QAAQ,IAAK,KAE1BD,CAAO,EC7GT,MAAME,UAAsBC,EAAMC,UACvCC,8BAA6BC,IAAEA,EAAGC,IAAEA,IAClCD,EAAIE,UAAU,eAAgB,YAC9B,IACE,MAAMxB,QAAEA,SAAkBrB,EAAW,YAAa,MAAO,CACvDC,KAAM2C,EAAIxC,IACVC,QAASuC,GAAKvC,SAAW,CAAC,IAE5BsC,EAAIG,MAAMzB,EAGZ,CAFE,MAAOc,GACPY,QAAQzB,MAAMa,EAAIb,MACpB,CACAqB,EAAIK,KACN,ECdK,MAAMC,UAAqBR,EAChCC,8BAA6BC,IAAEA,EAAGC,IAAEA,IAClCD,EAAIE,UAAU,eAAgB,cAC9B,IACE,MAAMxB,QAAEA,SAAkBrB,EAAW,WAAY,MAAO,CACtDK,QAASuC,GAAKvC,SAAW,CAAC,IAE5BsC,EAAIG,MAAMzB,EAGZ,CAFE,MAAOc,GACPY,QAAQzB,MAAMa,EAAIb,MACpB,CACAqB,EAAIK,KACN"}