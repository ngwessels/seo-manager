import{Component as e}from"react";const t=require("axios"),r="v1",s=(e,s="put",E,a,c)=>new Promise((async(n,_)=>{try{const p=(()=>{let e={};return process.env.SEO_MANAGER_MODULE_SECRETKEY&&(e.secretKey=process.env.SEO_MANAGER_MODULE_SECRETKEY),process.env.SEO_MANAGER_MODULE_PROJECTKEY&&(e.projectKey=process.env.SEO_MANAGER_MODULE_PROJECTKEY),process.env.SEO_MANAGER_MODULE_PROJECTID&&(e.projectId=process.env.SEO_MANAGER_MODULE_PROJECTID),e})();if(!p?.projectId)return _({results:!1,error:"Project Id is required"});const d=o(e),l=a||("Test"!==process.env.NEXT_PUBLIC_NODE_ENV_MANAGER&&"Development"!==process.env.NEXT_PUBLIC_NODE_ENV_MANAGER?`https://seomanager.dev/api/${r}/${d}`:"Test"===process.env.NEXT_PUBLIC_NODE_ENV_MANAGER?`http://localhost:3001/api/${r}/${d}`:`https://testing.seomanager.dev/api/${r}/${d}`);let O={X_ProjectId:p?.projectId,X_ProjectKey:p?.projectKey};c&&(O={...O,...c});const i=await t({method:s||"post",url:l,data:E||{},headers:O});return n(i?.data?.results?{results:i?.data?.results}:i?.data)}catch(e){return n({results:!1,data:e?.response?.data})}})),o=e=>{let t=e;return"/"===t[0]&&(t=t.replace("/","")),t};class E extends e{static async getInitialProps({res:e,req:t}){e.setHeader("Content-Type","text/plain");try{const{results:r}=await s("/robots/","put",{headers:t.headers});e.write(r)}catch(e){console.error(e.error)}e.end()}}export{E as default};
