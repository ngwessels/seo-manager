{"version":3,"file":"index.es.js","sources":["../src/utilities/setupInit.ts","../src/firebase.ts","../src/utilities/serverCall.ts","../src/utilities/fetch.ts","../src/backend/index.ts"],"sourcesContent":["export const returnKey = (): {\n  secretKey?: string;\n  projectKey?: string;\n  projectId?: string;\n} => {\n  let object: any = {};\n  // let objectValid = false;\n  if (process.env.SEO_MANAGER_MODULE_SECRETKEY) {\n    object.secretKey = process.env.SEO_MANAGER_MODULE_SECRETKEY;\n    // objectValid = true;\n  }\n  if (process.env.SEO_MANAGER_MODULE_PROJECTKEY) {\n    object.projectKey = process.env.SEO_MANAGER_MODULE_PROJECTKEY;\n    // objectValid = true;\n  }\n  if (process.env.SEO_MANAGER_MODULE_PROJECTID) {\n    object.projectId = process.env.SEO_MANAGER_MODULE_PROJECTID;\n    // objectValid = true;\n  }\n\n  return object;\n};\n\nexport const setProject = (project: any) => {\n  process.env.SEO_MANAGER_MODULE_PROJECT = JSON.stringify(project);\n};\n\nexport const returnProject = (): any | null => {\n  const data = process.env.SEO_MANAGER_MODULE_PROJECT;\n  return data ? JSON.parse(data) : null;\n};\n\nexport const setProjectPlan = (projectPlan: any) => {\n  process.env.SEO_MANAGER_MODULE_PROJECTPLAN = JSON.stringify(projectPlan);\n};\n\nexport const returnProjectPlan = (): any | null => {\n  const data = process.env.SEO_MANAGER_MODULE_PROJECTPLAN;\n  return data ? JSON.parse(data) : null;\n};\n","import { initializeApp, getApps, getApp } from \"firebase/app\";\n\nconst firebaseConfig =\n  process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Test\" &&\n  process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Development\"\n    ? {\n        apiKey: \"AIzaSyDPjpRmobrdUtIY3hIaNoyox7alxYJH_B8\",\n        authDomain: \"seo-manager-live.firebaseapp.com\",\n        projectId: \"seo-manager-live\",\n        storageBucket: \"seo-manager-live.appspot.com\",\n        messagingSenderId: \"510256510596\",\n        appId: \"1:510256510596:web:eae1ccc42cb103b8a7f4d1\",\n        measurementId: \"G-RED1HCM49W\"\n      }\n    : {\n        apiKey: \"AIzaSyBD6KEJFm2SVguRDEiqufIlRo5HuHu0IZg\",\n        authDomain: \"seo-manager-test.firebaseapp.com\",\n        projectId: \"seo-manager-test\",\n        storageBucket: \"seo-manager-test.appspot.com\",\n        messagingSenderId: \"682714204028\",\n        appId: \"1:682714204028:web:a782b9da96ce811ee606f9\",\n        measurementId: \"G-PYZDK47B2M\"\n      };\n\nlet app: any;\nconst appFoundIndex = getApps()?.findIndex((a) => {\n  if (a?.name === \"seo-manager\") {\n    return true;\n  }\n  return false;\n});\nif (appFoundIndex < 0) {\n  app = initializeApp(firebaseConfig, \"seo-manager\");\n} else {\n  app = getApp(\"seo-manager\");\n}\nexport default app;\n","import axios, { Method } from \"axios\";\nimport { returnKey } from \"./setupInit\";\n\nconst version = \"v1\";\n\nexport const serverCall = (\n  path: string,\n  method: string = \"put\",\n  data: any,\n  url?: string,\n  headers?: any\n): any => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const initData = returnKey(); //Returns Project Id and Project Key\n      if (!initData?.projectId) {\n        return reject({ results: false, error: \"Project Id is required\" });\n      }\n      const formattedPath = formatPath(path);\n      const urlPath = url\n        ? url\n        : process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Test\" &&\n          process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Development\"\n        ? `https://www.seomanager.dev/api/${version}/${formattedPath}`\n        : process.env.NEXT_PUBLIC_NODE_ENV_MANAGER === \"Test\"\n        ? `http://localhost:3001/api/${version}/${formattedPath}`\n        : `https://testing.seomanager.dev/api/${version}/${formattedPath}`;\n\n      let callHeaders = {\n        X_ProjectId: initData?.projectId,\n        X_ProjectKey: initData?.projectKey || \"\"\n      };\n      if (headers) {\n        callHeaders = { ...callHeaders, ...headers };\n      }\n      const response = await axios(urlPath, {\n        method: method as Method,\n        data: data || {},\n        headers: callHeaders\n      });\n      if (!response?.data?.results) {\n        return resolve(response?.data);\n      }\n      return resolve({ results: response?.data?.results });\n    } catch (err: any) {\n      return resolve({ results: false, data: err?.response?.data });\n    }\n  });\n};\n\nexport const serverSecretCall = (\n  path: string,\n  method: \"put\" | \"post\" = \"put\",\n  data: any,\n  url?: string,\n  headers?: any\n): any => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const initData = returnKey(); //Returns Project Id and Project Key\n\n      if (!initData?.projectId) {\n        return reject({ results: false, error: \"Project Id is required\" });\n      }\n      if (!initData?.secretKey) {\n        return reject({\n          results: false,\n          error: \"Project Secret Key is required\"\n        });\n      }\n\n      const formattedPath = formatPath(path);\n\n      const urlPath = url\n        ? url\n        : process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Test\" &&\n          process.env.NEXT_PUBLIC_NODE_ENV_MANAGER !== \"Development\"\n        ? `https://www.seomanager.dev/api/${version}/${formattedPath}`\n        : process.env.NEXT_PUBLIC_NODE_ENV_MANAGER === \"Test\"\n        ? `http://localhost:3001/api/${version}/${formattedPath}`\n        : `https://testing.seomanager.dev/api/${version}/${formattedPath}`;\n      let callHeaders = {\n        X_ProjectId: initData?.projectId,\n        X_ProjectKey: initData?.projectKey || \"\",\n        X_ProjectSecretKey: initData?.secretKey || \"\"\n      };\n      if (headers) {\n        callHeaders = { ...callHeaders, ...headers };\n      }\n      const response = await axios(urlPath, {\n        method: method as Method,\n        url: urlPath,\n        data: data || {},\n        headers: callHeaders\n      });\n      return resolve(response?.data);\n    } catch (err: any) {\n      return resolve({\n        results: err?.response?.data?.results || false,\n        error: err?.response?.data?.error || true,\n        message:\n          err?.response?.data?.message ||\n          err?.response?.data ||\n          \"There was an error on our end! Please try again in a few minutes!\"\n      });\n    }\n  });\n};\n\nconst formatPath = (path: string) => {\n  let newPath = path;\n  if (newPath[0] === \"/\") {\n    newPath = newPath.replace(\"/\", \"\");\n  }\n  return newPath;\n};\n","import firebase from \"../firebase\";\nimport { getAuth, getIdToken } from \"firebase/auth\";\nconst auth: any = getAuth(firebase);\n\nimport { serverCall } from \"./serverCall\";\n\nexport const fetch = (\n  path: string,\n  headers: any = {}\n): Promise<{ results: boolean; error: string; message: string }> => {\n  return new Promise(async (resolve) => {\n    try {\n      //   if (process.browser) {\n      // throw {\n      //   error:\n      //     \"This function is only allowed to be called in a server environment, not in the client. If you are using NextJS this belong in getServerSideProps or getStaticProps.\"\n      // };\n      //   }\n      if (typeof window !== \"undefined\") {\n        throw {\n          error:\n            \"This function is only allowed to be called in a server environment, not in the client. If you are using NextJS this belong in getServerSideProps or getStaticProps.\"\n        };\n      }\n\n      if (!path) {\n        throw { error: \"You must pass page path!\" };\n      }\n      const { results, error } = await serverCall(\"/seo/server_get\", \"put\", {\n        path,\n        headers: headers || {}\n      });\n      if (!results) {\n        return resolve({\n          results: false,\n          error: error,\n          message: \"No SEO data for this page found\"\n        });\n      }\n      return resolve({ results, error: \"\", message: \"Successful\" });\n    } catch (err: any) {\n      return resolve({\n        results: false,\n        error: err.error,\n        message: \"Not Successful\"\n      });\n    }\n  });\n};\n\nexport const getUserToken = (): Promise<string> => {\n  return new Promise(async (resolve) => {\n    const token = getIdToken(auth.currentUser, true);\n    return resolve(token);\n  });\n};\n","import { fetch } from \"../utilities/fetch\";\nimport { serverSecretCall } from \"../utilities/serverCall\";\nimport {\n  PageIdentifiers,\n  PageSEO,\n  FetchSEOHeaders,\n  PageOptions\n} from \"../types\";\n\n//SEO DATA FETCH\n/**\n * * @name fetchSEO\n * @function\n * @param {string} path - Path to SEO page\n * @param {FetchSEOHeaders} [meta] - {request: context?.req}\n */\nexport const fetchSEO = (path: string, meta: FetchSEOHeaders = {}) => {\n  return new Promise(async (resolve) => {\n    const data = await fetch(path, meta?.request?.headers || {});\n    return resolve(data);\n  });\n};\n\n//VALIDATION\nexport const backendValidation = (queueId: string) => {\n  return new Promise(async (resolve) => {\n    try {\n      checkBackendKeys(); //Checks keys\n      const response = await serverSecretCall(\"/backend/validate\", \"put\", {\n        queueId\n      });\n      return resolve(response);\n    } catch (err: any) {\n      return resolve({\n        results: false,\n        message: err?.data?.error || err?.error || \"Something went wrong\",\n        error: true\n      });\n    }\n  });\n};\n\nexport const checkBackendKeys = () => {\n  const initData: any = returnKey(); //Returns Project Id and Project Key\n  if (!initData?.secretKey) {\n    throw {\n      error:\n        \"Please add a secretKey by calling the SEOInit function SEOInit({secretKey: <<Add Value Here>>. Make sure you initialize this in your Api, not _app.js!\"\n    };\n  }\n  if (!initData?.projectId) {\n    throw {\n      error:\n        \"Please add a projectId by calling the SEOInit function SEOInit({projectId: <<Add Value Here>>. Make sure you initialize this in your Api, not _app.js!\"\n    };\n  }\n};\n\n//BACKEND API\n\n//Insert a new page\n/**\n@name insertSeoPage\n@function\n@param {PageIdentifiers[]} pageIdentifiers - Array of {path [Required], pageId [Optional]}\n@param {PageSEO[]} pageSEO - Array of {title, description}\n*/\nexport function insertSeoPage(\n  pageIdentifiers: PageIdentifiers[],\n  pageSEO: PageSEO[]\n) {\n  return new Promise(async (resolve) => {\n    try {\n      if (pageIdentifiers?.length > 50) {\n        return resolve({\n          results: false,\n          message: \"You are limited to 50 inserts at the same time!\",\n          error: true\n        });\n      }\n      checkBackendKeys(); //Checks keys\n      const response = await serverSecretCall(\"backend/seo/insert\", \"post\", {\n        pageIdentifiers,\n        pageSEO\n      });\n      return resolve(response);\n    } catch (err: any) {\n      console.error(err);\n      return resolve({\n        results: false,\n        message: err?.data?.error || err?.error || \"Something went wrong\",\n        error: true\n      });\n    }\n  });\n}\n\n//Update Existing pages or insert new page\n/**\n@name updateSeoPage - Update a batch of SEO Pages\n@function \n@param {PageIdentifiers[]} pageIdentifiers - Array of {path [Required], pageId [Optional]}\n@param {PageSEO[]} pageSEO - Array of {title, description}\n@param {PageOptions} options - additional options for the batch update\n*/\nexport const updateSeoPage = (\n  pageIdentifiers: PageIdentifiers[],\n  pageSEO: PageSEO[],\n  options: PageOptions\n) => {\n  return new Promise(async (resolve) => {\n    try {\n      if (pageIdentifiers?.length > 50) {\n        return resolve({\n          results: false,\n          message: \"You are limited to 50 updates at the same time!\",\n          error: true\n        });\n      }\n      checkBackendKeys(); //Checks keys\n      const response = await serverSecretCall(\"backend/seo/update\", \"put\", {\n        pageIdentifiers,\n        pageSEO,\n        options\n      });\n      return resolve(response);\n    } catch (err: any) {\n      console.log(\"Error:\", err);\n      return resolve({\n        results: false,\n        message: err?.data?.error || err?.error || \"Something went wrong\",\n        error: true\n      });\n    }\n  });\n};\n\n//Delete existing pages\n/**\n@name deleteSeoPage\n@function\n@param {PageIdentifiers[]} pageIdentifiers - Array of {path [Required], pageId [Optional]}\n*/\nexport const deleteSeoPage = (pageIdentifiers: PageIdentifiers[]) => {\n  return new Promise(async (resolve) => {\n    try {\n      if (pageIdentifiers?.length > 50) {\n        return resolve({\n          results: false,\n          message: \"You are limited to 50 deletes at the same time!\",\n          error: true\n        });\n      }\n      checkBackendKeys(); //Checks keys\n      const response = await serverSecretCall(\"backend/seo/delete\", \"post\", {\n        pageIdentifiers\n      });\n      return resolve(response);\n    } catch (err: any) {\n      return resolve({\n        results: false,\n        message: err?.data?.error || err?.error || \"Something went wrong\",\n        error: true\n      });\n    }\n  });\n};\n\n//Get pages that fit identifiers\n/**\n@name getSeoPages\n@function\n@param {PageIdentifiers} pageIdentifiers - Object of {path [Required], pageId [Optional]}\n*/\nexport const getSeoPages = (pageIdentifiers: PageIdentifiers): Promise<any> => {\n  return new Promise(async (resolve) => {\n    try {\n      checkBackendKeys(); //Checks keys\n      const response = await serverSecretCall(\n        \"backend/seo/getSeoPages\",\n        \"post\",\n        {\n          pageIdentifiers\n        }\n      );\n      return resolve(response);\n    } catch (err: any) {\n      return resolve({\n        results: false,\n        error: true,\n        message: err?.data?.error || err?.error || \"Something went wrong\"\n      });\n    }\n  });\n};\n\n//RETURN KEYS\nconst returnKey = (): {\n  secretKey?: string;\n  projectKey?: string;\n  projectId?: string;\n} => {\n  let object: { secretKey?: string; projectKey?: string; projectId?: string } =\n    {};\n  if (process.env.SEO_MANAGER_MODULE_SECRETKEY) {\n    object.secretKey = process.env.SEO_MANAGER_MODULE_SECRETKEY;\n  }\n  if (process.env.SEO_MANAGER_MODULE_PROJECTKEY) {\n    object.projectKey = process.env.SEO_MANAGER_MODULE_PROJECTKEY;\n  }\n  if (process.env.SEO_MANAGER_MODULE_PROJECTID) {\n    object.projectId = process.env.SEO_MANAGER_MODULE_PROJECTID;\n  }\n\n  return object;\n};\n"],"names":["returnKey","object","process","env","SEO_MANAGER_MODULE_SECRETKEY","secretKey","SEO_MANAGER_MODULE_PROJECTKEY","projectKey","SEO_MANAGER_MODULE_PROJECTID","projectId","setProject","project","SEO_MANAGER_MODULE_PROJECT","JSON","stringify","returnProject","data","parse","setProjectPlan","projectPlan","SEO_MANAGER_MODULE_PROJECTPLAN","returnProjectPlan","firebaseConfig","NEXT_PUBLIC_NODE_ENV_MANAGER","apiKey","authDomain","storageBucket","messagingSenderId","appId","measurementId","app","_a","getApps","findIndex","a","name","initializeApp","getApp","version","serverSecretCall","path","method","url","headers","Promise","resolve","reject","__awaiter","initData","results","error","formattedPath","formatPath","urlPath","callHeaders","X_ProjectId","X_ProjectKey","X_ProjectSecretKey","Object","assign","response","axios","err","_b","_d","_c","message","_f","_e","_g","newPath","replace","getAuth","fetch","window","serverCall","fetchSEO","meta","request","backendValidation","queueId","checkBackendKeys","insertSeoPage","pageIdentifiers","pageSEO","this","length","console","updateSeoPage","options","log","deleteSeoPage","getSeoPages"],"mappings":"mIAAO,MAAMA,EAAY,KAKvB,IAAIC,EAAc,CAAA,EAelB,OAbIC,QAAQC,IAAIC,+BACdH,EAAOI,UAAYH,QAAQC,IAAIC,8BAG7BF,QAAQC,IAAIG,gCACdL,EAAOM,WAAaL,QAAQC,IAAIG,+BAG9BJ,QAAQC,IAAIK,+BACdP,EAAOQ,UAAYP,QAAQC,IAAIK,8BAI1BP,CAAM,EAGFS,EAAcC,IACzBT,QAAQC,IAAIS,2BAA6BC,KAAKC,UAAUH,EAAQ,EAGrDI,EAAgB,KAC3B,MAAMC,EAAOd,QAAQC,IAAIS,2BACzB,OAAOI,EAAOH,KAAKI,MAAMD,GAAQ,IAAI,EAG1BE,EAAkBC,IAC7BjB,QAAQC,IAAIiB,+BAAiCP,KAAKC,UAAUK,EAAY,EAG7DE,EAAoB,KAC/B,MAAML,EAAOd,QAAQC,IAAIiB,+BACzB,OAAOJ,EAAOH,KAAKI,MAAMD,GAAQ,IAAI,6SCpCvC,MAAMM,EACyC,SAA7CpB,QAAQC,IAAIoB,8BACiC,gBAA7CrB,QAAQC,IAAIoB,6BACR,CACEC,OAAQ,0CACRC,WAAY,mCACZhB,UAAW,mBACXiB,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAEjB,CACEL,OAAQ,0CACRC,WAAY,mCACZhB,UAAW,mBACXiB,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAGvB,IAAIC,EAQFA,GAP+B,QAAXC,EAAAC,WAAW,IAAAD,OAAA,EAAAA,EAAAE,WAAWC,GAC1B,iBAAZA,aAAC,EAADA,EAAGC,SAKW,EACZC,EAAcd,EAAgB,eAE9Be,EAAO,eC/Bf,MAAMC,EAAU,KA+CHC,EAAmB,CAC9BC,EACAC,EAAyB,MACzBzB,EACA0B,EACAC,IAEO,IAAIC,SAAQ,CAAOC,EAASC,IAAUC,OAAA,OAAA,OAAA,GAAA,8BAC3C,IACE,MAAMC,EAAWhD,IAEjB,KAAKgD,eAAAA,EAAUvC,WACb,OAAOqC,EAAO,CAAEG,SAAS,EAAOC,MAAO,2BAEzC,KAAKF,eAAAA,EAAU3C,WACb,OAAOyC,EAAO,CACZG,SAAS,EACTC,MAAO,mCAIX,MAAMC,EAAgBC,EAAWZ,GAE3Ba,EAAUX,IAEiC,SAA7CxC,QAAQC,IAAIoB,8BACiC,gBAA7CrB,QAAQC,IAAIoB,6BACZ,kCAAkCe,KAAWa,IACA,SAA7CjD,QAAQC,IAAIoB,6BACZ,6BAA6Be,KAAWa,IACxC,sCAAsCb,KAAWa,KACrD,IAAIG,EAAc,CAChBC,YAAaP,aAAA,EAAAA,EAAUvC,UACvB+C,cAAcR,eAAAA,EAAUzC,aAAc,GACtCkD,oBAAoBT,eAAAA,EAAU3C,YAAa,IAEzCsC,IACFW,EAAmBI,OAAAC,OAAAD,OAAAC,OAAA,GAAAL,GAAgBX,IAErC,MAAMiB,QAAiBC,EAAMR,EAAS,CACpCZ,OAAQA,EACRC,IAAKW,EACLrC,KAAMA,GAAQ,CAAE,EAChB2B,QAASW,IAEX,OAAOT,EAAQe,eAAAA,EAAU5C,KAU1B,CATC,MAAO8C,GACP,OAAOjB,EAAQ,CACbI,SAA8B,QAArBc,EAAe,QAAfhC,EAAA+B,aAAG,EAAHA,EAAKF,gBAAU,IAAA7B,OAAA,EAAAA,EAAAf,YAAM,IAAA+C,OAAA,EAAAA,EAAAd,WAAW,EACzCC,OAA4B,QAArBc,EAAe,QAAfC,EAAAH,aAAG,EAAHA,EAAKF,gBAAU,IAAAK,OAAA,EAAAA,EAAAjD,YAAM,IAAAgD,OAAA,EAAAA,EAAAd,SAAS,EACrCgB,iBACEC,EAAe,QAAfC,EAAAN,aAAA,EAAAA,EAAKF,gBAAU,IAAAQ,OAAA,EAAAA,EAAApD,2BAAMkD,WACN,QAAfG,EAAAP,aAAG,EAAHA,EAAKF,gBAAU,IAAAS,OAAA,EAAAA,EAAArD,OACf,qEAEL,CACF,MAGGoC,EAAcZ,IAClB,IAAI8B,EAAU9B,EAId,MAHmB,MAAf8B,EAAQ,KACVA,EAAUA,EAAQC,QAAQ,IAAK,KAE1BD,CAAO,EChHEE,EFkCH1C,GE9BR,MAAM2C,EAAQ,CACnBjC,EACAG,EAAe,KAER,IAAIC,SAAeC,GAAWE,OAAA,OAAA,OAAA,GAAA,YACnC,IAOE,GAAsB,oBAAX2B,OACT,KAAM,CACJxB,MACE,uKAIN,IAAKV,EACH,KAAM,CAAEU,MAAO,4BAEjB,MAAMD,QAAEA,EAAOC,MAAEA,QDvBG,EACxBV,EACAC,EAAiB,MACjBzB,EACA0B,EACAC,IAEO,IAAIC,SAAQ,CAAOC,EAASC,IAAUC,OAAA,OAAA,OAAA,GAAA,sBAC3C,IACE,MAAMC,EAAWhD,IACjB,KAAKgD,eAAAA,EAAUvC,WACb,OAAOqC,EAAO,CAAEG,SAAS,EAAOC,MAAO,2BAEzC,MAAMC,EAAgBC,EAAWZ,GAC3Ba,EAAUX,IAEiC,SAA7CxC,QAAQC,IAAIoB,8BACiC,gBAA7CrB,QAAQC,IAAIoB,6BACZ,kCAAkCe,KAAWa,IACA,SAA7CjD,QAAQC,IAAIoB,6BACZ,6BAA6Be,KAAWa,IACxC,sCAAsCb,KAAWa,KAErD,IAAIG,EAAc,CAChBC,YAAaP,aAAA,EAAAA,EAAUvC,UACvB+C,cAAcR,eAAAA,EAAUzC,aAAc,IAEpCoC,IACFW,EAAmBI,OAAAC,OAAAD,OAAAC,OAAA,GAAAL,GAAgBX,IAErC,MAAMiB,QAAiBC,EAAMR,EAAS,CACpCZ,OAAQA,EACRzB,KAAMA,GAAQ,CAAE,EAChB2B,QAASW,IAEX,OAAqB,QAAhBvB,EAAA6B,aAAA,EAAAA,EAAU5C,YAAM,IAAAe,OAAA,EAAAA,EAAAkB,SAGdJ,EAAQ,CAAEI,kBAASW,aAAQ,EAARA,EAAU5C,2BAAMiC,UAFjCJ,EAAQe,eAAAA,EAAU5C,KAK5B,CAFC,MAAO8C,GACP,OAAOjB,EAAQ,CAAEI,SAAS,EAAOjC,KAAqB,QAAfiD,EAAAH,eAAAA,EAAKF,gBAAU,IAAAK,OAAA,EAAAA,EAAAjD,MACvD,CACF,MCnBoC2D,CAAW,kBAAmB,MAAO,CACpEnC,OACAG,QAASA,GAAW,CAAE,IAExB,OAOOE,EAPFI,EAOU,CAAEA,UAASC,MAAO,GAAIgB,QAAS,cAN7B,CACbjB,SAAS,EACTC,MAAOA,EACPgB,QAAS,mCAUd,CANC,MAAOJ,GACP,OAAOjB,EAAQ,CACbI,SAAS,EACTC,MAAOY,EAAIZ,MACXgB,QAAS,kBAEZ,CACF,MC/BUU,EAAW,CAACpC,EAAcqC,EAAwB,KACtD,IAAIjC,SAAeC,GAAWE,OAAA,OAAA,OAAA,GAAA,kBACnC,MAAM/B,QAAayD,EAAMjC,WAAMT,EAAA8C,aAAI,EAAJA,EAAMC,8BAASnC,UAAW,CAAA,GACzD,OAAOE,EAAQ7B,EAChB,MAIU+D,EAAqBC,GACzB,IAAIpC,SAAeC,GAAWE,OAAA,OAAA,OAAA,GAAA,kBACnC,IACEkC,IACA,MAAMrB,QAAiBrB,EAAiB,oBAAqB,MAAO,CAClEyC,YAEF,OAAOnC,EAAQe,EAOhB,CANC,MAAOE,GACP,OAAOjB,EAAQ,CACbI,SAAS,EACTiB,SAAkB,QAATnC,EAAA+B,aAAG,EAAHA,EAAK9C,YAAI,IAAAe,OAAA,EAAAA,EAAEmB,SAASY,aAAG,EAAHA,EAAKZ,QAAS,uBAC3CA,OAAO,GAEV,CACF,MAGU+B,EAAmB,KAC9B,MAAMjC,EAAgBhD,IACtB,KAAKgD,eAAAA,EAAU3C,WACb,KAAM,CACJ6C,MACE,0JAGN,KAAKF,eAAAA,EAAUvC,WACb,KAAM,CACJyC,MACE,yJAEL,EAYa,SAAAgC,EACdC,EACAC,GAEA,OAAO,IAAIxC,SAAeC,GAAWE,EAAAsC,UAAA,OAAA,GAAA,kBACnC,IACE,IAAIF,aAAe,EAAfA,EAAiBG,QAAS,GAC5B,OAAOzC,EAAQ,CACbI,SAAS,EACTiB,QAAS,kDACThB,OAAO,IAGX+B,IACA,MAAMrB,QAAiBrB,EAAiB,qBAAsB,OAAQ,CACpE4C,kBACAC,YAEF,OAAOvC,EAAQe,EAQhB,CAPC,MAAOE,GAEP,OADAyB,QAAQrC,MAAMY,GACPjB,EAAQ,CACbI,SAAS,EACTiB,SAAkB,QAATnC,EAAA+B,aAAG,EAAHA,EAAK9C,YAAI,IAAAe,OAAA,EAAAA,EAAEmB,SAASY,aAAG,EAAHA,EAAKZ,QAAS,uBAC3CA,OAAO,GAEV,CACF,KACH,CAUa,MAAAsC,EAAgB,CAC3BL,EACAC,EACAK,IAEO,IAAI7C,SAAeC,GAAWE,OAAA,OAAA,OAAA,GAAA,kBACnC,IACE,IAAIoC,aAAe,EAAfA,EAAiBG,QAAS,GAC5B,OAAOzC,EAAQ,CACbI,SAAS,EACTiB,QAAS,kDACThB,OAAO,IAGX+B,IACA,MAAMrB,QAAiBrB,EAAiB,qBAAsB,MAAO,CACnE4C,kBACAC,UACAK,YAEF,OAAO5C,EAAQe,EAQhB,CAPC,MAAOE,GAEP,OADAyB,QAAQG,IAAI,SAAU5B,GACfjB,EAAQ,CACbI,SAAS,EACTiB,SAAkB,QAATnC,EAAA+B,aAAG,EAAHA,EAAK9C,YAAI,IAAAe,OAAA,EAAAA,EAAEmB,SAASY,aAAG,EAAHA,EAAKZ,QAAS,uBAC3CA,OAAO,GAEV,CACF,MASUyC,EAAiBR,GACrB,IAAIvC,SAAeC,GAAWE,OAAA,OAAA,OAAA,GAAA,kBACnC,IACE,IAAIoC,aAAe,EAAfA,EAAiBG,QAAS,GAC5B,OAAOzC,EAAQ,CACbI,SAAS,EACTiB,QAAS,kDACThB,OAAO,IAGX+B,IACA,MAAMrB,QAAiBrB,EAAiB,qBAAsB,OAAQ,CACpE4C,oBAEF,OAAOtC,EAAQe,EAOhB,CANC,MAAOE,GACP,OAAOjB,EAAQ,CACbI,SAAS,EACTiB,SAAkB,QAATnC,EAAA+B,aAAG,EAAHA,EAAK9C,YAAI,IAAAe,OAAA,EAAAA,EAAEmB,SAASY,aAAG,EAAHA,EAAKZ,QAAS,uBAC3CA,OAAO,GAEV,CACF,MASU0C,EAAeT,GACnB,IAAIvC,SAAeC,GAAWE,OAAA,OAAA,OAAA,GAAA,kBACnC,IACEkC,IACA,MAAMrB,QAAiBrB,EACrB,0BACA,OACA,CACE4C,oBAGJ,OAAOtC,EAAQe,EAOhB,CANC,MAAOE,GACP,OAAOjB,EAAQ,CACbI,SAAS,EACTC,OAAO,EACPgB,SAAkB,QAATnC,EAAA+B,aAAG,EAAHA,EAAK9C,YAAI,IAAAe,OAAA,EAAAA,EAAEmB,SAASY,aAAG,EAAHA,EAAKZ,QAAS,wBAE9C,CACF,MAIGlD,EAAY,KAKhB,IAAIC,EACF,CAAA,EAWF,OAVIC,QAAQC,IAAIC,+BACdH,EAAOI,UAAYH,QAAQC,IAAIC,8BAE7BF,QAAQC,IAAIG,gCACdL,EAAOM,WAAaL,QAAQC,IAAIG,+BAE9BJ,QAAQC,IAAIK,+BACdP,EAAOQ,UAAYP,QAAQC,IAAIK,8BAG1BP,CAAM"}