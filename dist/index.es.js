import e,{Component as r}from"react";const t=({projectId:e,projectKey:r,secretKey:t})=>{let o={...s()||{}};if(e&&(o.projectId=e,process.env.SEO_MANAGER_MODULE_PROJECTID=e),r&&(o.projectKey=r,process.env.SEO_MANAGER_MODULE_PROJECTKEY=r),t&&(o.secretKey=t,process.env.SEO_MANAGER_MODULE_SECRETKEY=t),!o?.projectId)throw"Please add a projectId by calling the SEOInit function SEOInit({projectId: '<<Add Value Here>>'})"},s=()=>{let e={},r=!1;return process.env.SEO_MANAGER_MODULE_SECRETKEY&&(e.secretKey=process.env.SEO_MANAGER_MODULE_SECRETKEY,r=!0),process.env.SEO_MANAGER_MODULE_PROJECTKEY&&(e.projectKey=process.env.SEO_MANAGER_MODULE_PROJECTKEY,r=!0),process.env.SEO_MANAGER_MODULE_PROJECTID&&(e.projectId=process.env.SEO_MANAGER_MODULE_PROJECTID,r=!0),!!r&&e},o=e=>{process.env.SEO_MANAGER_MODULE_PROJECT=JSON.stringify(e)},a=()=>{const e=process.env.SEO_MANAGER_MODULE_PROJECT;return e?JSON.parse(e):null},E=require("axios"),n="v1",c=(e,r="put",t,o,a)=>new Promise((async(c,_)=>{try{const i=s();if(!i?.projectId)return _({results:!1,error:"Project Id is required"});const d=p(e),l=o||("Test"!==process.env.NEXT_PUBLIC_NODE_ENV_MANAGER&&"Development"!==process.env.NEXT_PUBLIC_NODE_ENV_MANAGER?`https://seo-manager-website.vercel.app/api/${n}/${d}`:"Test"===process.env.NEXT_PUBLIC_NODE_ENV_MANAGER?`http://localhost:3001/api/${n}/${d}`:`https://seo-manager-website-git-testing-shadow-republic.vercel.app/api/${n}/${d}`);let O={X_ProjectId:i?.projectId,X_ProjectKey:i?.projectKey};a&&(O={...O,...a});const A=await E({method:r||"post",url:l,data:t||{},headers:O});return c(A?.data?.results?{results:A?.data?.results}:{results:A?.data?.results||!1,error:A?.data?.error||!0,message:A?.data?.message||"There was an error on our end! Please try again in a few mintues!"})}catch(e){return c({results:!1,data:e?.response?.data})}})),p=e=>{let r=e;return"/"===r[0]&&(r=r.replace("/","")),r};class _ extends e.Component{static async getInitialProps({res:e,req:r}){e.setHeader("Content-Type","text/xml");try{const{results:t}=await c("/sitemap/","put",{path:r.url,headers:r.headers});e.write(t)}catch(e){console.error(e.error)}e.end()}}class i extends r{static async getInitialProps({res:e,req:r}){e.setHeader("Content-Type","text/plain");try{const{results:t}=await c("/robots/","put",{headers:r.headers});e.write(t)}catch(e){console.error(e.error)}e.end()}}export{i as RobotsHelper,t as SEOinitialize,_ as SitemapHelper,s as returnKey,a as returnProject,o as setProject};
